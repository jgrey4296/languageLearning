;;a simple build-shape script

(clear)

;;triplets of positions:
(define instructions `(
                       (-1 0 0) (-1 1 0) (-1 2 0) (-1 3 0)
                       (0 3 0)
                       (1 3 0) (1 2 0) (1 1 0) (1 0 0)))

(define (buildObj ins)
  (let ([paired (map (lambda (x) `(,(build-cube) ,x)) ins)])
    (for ([c paired])
                            (let ([instruction (cadr c)])
                              (with-primitive (car c)
                                              (translate (vector (car instruction) (cadr instruction) (caddr instruction))))))))

(buildObj instructions)

(with-primitive (build-plane)
                (rotate (vector 90 0 0)))
